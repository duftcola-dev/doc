




1.0 # INSTALLATION 

    - requires nodejs to be installed 
    - npm install -g @angular/cli 
    
    1.1 # CREATE AN APP 

        ng new my-app

    1.2 # LAUNCH YOUR APP 

        cd my-app
        ng serve --open
    
    1.3 # ADD UNITTEST FOLDER   (OPTIONAL)

        ng e2e my-app


2.0 # CORE CONCEPTS 

    2.1 # BUILDING BLOCKS 

        ** Angular building blocks are:

            - Components 
            - Routes 
            - Directives 
            - Services 
            - Modules

    2.2 # COMPONENTS

        A component is made of :
    
            - templateUrl : links the component with its HTML view
            - styleUrls : links view with its style
            - class : contains the logic of the component

        example : 

            import { Component } from '@angular/core';

            @Component({
            selector: 'app-root',
            templateUrl: './app.component.html',
            styleUrls: ['./app.component.css']
            })
            export class AppComponent {
            title = 'Hello World';
            }

        ** Notice Component is a decorator from the @angular/core
        ** Components use the notation : 

            component_name.compoments.ts

    2.3 # MODULES 

        **Modules allow the agrupation of components
        **Module use the notation:

            module_name.module.ts
        
        **Every module is composed by the following fields :

            delcarations: Contains components
            imports: Contain other modules 
            providers: ? 
            bootstrap: It is the root component the application launches ?? 
            exports: Contains the compoments whose template(html) we want
                     to make available for other modules

        example:

            
        


    2.3 # SERVICES 

        **services are the part in Angular that handles the logic 

        Component ---> button ----> service  


    2.4 # DIRECTIVES 

        ** Directives are smaller componensts that
        create , update or alter HTML 

        - Componets directives 
        - Structure directives 
        - Attribute directives 

    2.5 # ROUTES 

        **Determines what html is rendered.

    
    2.6 # MODULES 

        ENCASES
            - Components 
            - Services 
            - Directives 
            - Routes 

            ...etc
        

3.0 # PROJECT FILES 

    ** notice typescritp allows .json to inherit from other json 
    files by using  

         "extends": "./tsconfig.json",

    tsconfig.json: Tells how to translate from ts to js 
    tsconfig.spect.json: file related to unit test configuration 
    tsconfig.app.json: main app configuration file 

    README.md : project documentation file.

    package.json : Contains scripts and the insalled deppendecies.

    karma.conf.js : (watch advanced angular) 

    angular.json : Aungular configuration files and assets loading

    .editorconfig : contains rules for ts files. 
    .browserslistrc : Contains rules on how to run/display in x certain browsers.


4.0 # ANATOMY OF A COMPONENT 

    **in app/src/ we have the first default component created by
    the cli 

    - app.component.css : contains the style 
    - app.component.html : contains the view 
    - app.component.spect : contains test created by the cli 
    - app.module.ts : is the root class of the application and contains 
                        the modules of our application in the decorator @NgModule
    - assets/ : contains static files 
    - environments : contains the the prod , dev variables. 
    - index.html : main page of the spa 
    - main.ts : (do not touch this file) loads invironment variables.
    - polifills : allows compatibility with other browsers 
    - style.css : global css style 
    - test.ts: test configuration

 # CREATING COMPONENTS WITH THE CLI

    ** By default angular already creates the compononents
    inside src/app

    ng generate component .component_name 

    ** short version 

    ng g c component_name 

    example: 

        ng g c listado  ---> will generate ListadoComponent