# WHAT ARE SSH KEYS 

    - SSH (Secure shell) is used to managing connections with servers through 
    unsafe networks. When working with an Ubuntu server, chances are you will 
    spend most of your time in a terminal session connected to your 
    server through SSH.

    - Functionally SSH is like a password that grant access. 
    Technically the keys are cryptographic keys
    using a piblic key cryptosystem (Unix)

# HOW TO SETUP PUBLIC KEY AUTHENTICATION OPEN SSH

    - By default in unix keys are stored in .ssh which is a subdirectory
    of /home . In this directory you have  :

        - .ssh/ssh_id_rsa : This is the identity key . It is a private key that the SSH 
        client uses to authenticate itself when loggin to an ssh server.

        - .ssh/id_rsa.pub : This is a public key . The public key is generated from the
        private key and is used to verify signatures generated by the private key

    1) on console : This will generate a key pair (public and private) in /home/.ssh/

        ssh-keygen
        
        **press enter to save the key pair

    2) Enter passphrase (empty for no passphrase):

        **usually a passphrase will be used which will be your password
        for using the SSH protocol.

        **You now a public and private key 

    3) Copy your public key to your Ubuntu Server

        **There are 2 ways of doing this:
            3.1) Using the ssh-copy-id utility
            3.2) Copying the public key using ssh
            3.3) Manually coping the public key
    
    3.1) COPY BY SSH-COPY-ID 

        **the sintax is  :

            ssh-copy-id  <user_name>@<remote_host_here>

            **This may output something like  :

                +++ The authenticity of host '203.0.113.1 (203.0.113.1)' can't be established.
                ECDSA key fingerprint is fd:fd:d4:f9:77:fe:73:84:e1:55:00:ad:d6:6d:22:fe.
                Are you sure you want to continue connecting (yes/no)? yes +++

                **This may happend the first time a connection is attempted
                **Enter yes / y
                **Next, the utility will scan your local account for the id_rsa.pub
                **Once it finds it the console will ask you for the password of the remote
                user.

    3.2) COPYING PUBLIC KEY USING  SSH:

        ** This is the SSH conventional method
        **We can do this by using the cat command : 

            cat ~/.ssh/id_rsa.pub | ssh username@remote_host "mkdir -p ~/.ssh && touch ~/.ssh/authorized_keys && chmod -R go= ~/.ssh && cat >> ~/.ssh/authorized_keys"
            ** Dont forget to replace username and remote_host
            ** You may see next the step where the console asks you if you want to connect 
            ** Then you may see the step where it asks you for the remote user password 

    3.3) MANUAL COPY OF PUBLIC SSH 

        **use a code editor to display the content of you public ssh key
        and copy it.

            cd ~/.ssh 
            cat ~/.ssh/id_rsa.pub 

            or 

            code ~/.ssh/id_rsa.pub  ** in the case of vscode

        ** Access the remote host server 
        ** Find the .ssh directory 
        ** Add your(copied) public key the end of the file  ~/.ssh/authorized_keys

            ** This can be done manually or with the command :

            echo your_public_key_here >> ~/.ssh/authorized_keys

    3.4) LOG INTO THE REMOTE SERVER 

        **If the previous steps worked you should be able to log into the
        remote server without having to provide the remote accounts password:

            ssh ssh remote_username@remote_host